// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PersistenceLayer;

namespace PersistenceLayer.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210623211425_DataBaseInitialization")]
    partial class DataBaseInitialization
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DomainLayer.Node", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Node");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2021, 6, 23, 17, 14, 24, 749, DateTimeKind.Local).AddTicks(4610),
                            Description = "Nodo 1"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2021, 6, 23, 17, 14, 24, 750, DateTimeKind.Local).AddTicks(2641),
                            Description = "Nodo 2",
                            ParentId = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2021, 6, 23, 17, 14, 24, 750, DateTimeKind.Local).AddTicks(2655),
                            Description = "Nodo 3",
                            ParentId = 1
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2021, 6, 23, 17, 14, 24, 750, DateTimeKind.Local).AddTicks(2658),
                            Description = "Nodo 4",
                            ParentId = 2
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2021, 6, 23, 17, 14, 24, 750, DateTimeKind.Local).AddTicks(2659),
                            Description = "Nodo 5",
                            ParentId = 2
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2021, 6, 23, 17, 14, 24, 750, DateTimeKind.Local).AddTicks(2660),
                            Description = "Nodo 6",
                            ParentId = 3
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2021, 6, 23, 17, 14, 24, 750, DateTimeKind.Local).AddTicks(2662),
                            Description = "Nodo 7",
                            ParentId = 4
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2021, 6, 23, 17, 14, 24, 750, DateTimeKind.Local).AddTicks(2663),
                            Description = "Nodo 8",
                            ParentId = 4
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2021, 6, 23, 17, 14, 24, 750, DateTimeKind.Local).AddTicks(2664),
                            Description = "Nodo 9",
                            ParentId = 5
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2021, 6, 23, 17, 14, 24, 750, DateTimeKind.Local).AddTicks(2665),
                            Description = "Nodo 10",
                            ParentId = 5
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2021, 6, 23, 17, 14, 24, 750, DateTimeKind.Local).AddTicks(2666),
                            Description = "Nodo 11",
                            ParentId = 6
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2021, 6, 23, 17, 14, 24, 750, DateTimeKind.Local).AddTicks(2667),
                            Description = "Nodo 12",
                            ParentId = 6
                        });
                });

            modelBuilder.Entity("DomainLayer.NodeValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("NodeId")
                        .HasColumnType("int");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NodeId");

                    b.ToTable("NodeValue");
                });

            modelBuilder.Entity("DomainLayer.Node", b =>
                {
                    b.HasOne("DomainLayer.Node", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("DomainLayer.NodeValue", b =>
                {
                    b.HasOne("DomainLayer.Node", "Node")
                        .WithMany("Values")
                        .HasForeignKey("NodeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Node");
                });

            modelBuilder.Entity("DomainLayer.Node", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("Values");
                });
#pragma warning restore 612, 618
        }
    }
}
